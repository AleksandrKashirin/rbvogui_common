<?xml version="1.0"?>
<launch>

  <!-- - - - - - -->
  <!--   ROBOT   -->
  <!-- - - - - - -->
  <arg name="robot_id" default="$(optenv ROBOT_ID robot)"/>
  <arg name="prefix" default="$(arg robot_id)_"/>
  <arg name="robot_model" default="$(optenv ROBOT_MODEL rbvogui)"/>
  <arg name="has_safety_controller" default="$(optenv HAS_SAFETY_CONTROLLER false)"/>
  <arg name="has_rear_laser" default="$(optenv ROBOT_HAS_REAR_LASER true)"/>
  <arg name="run_move_base" default="$(optenv ROBOT_RUN_MOVE_BASE true)"/>
  <arg name="run_move" default="$(optenv ROBOT_RUN_MOVE false)"/>
  <arg name="differential_robot" default="$(optenv ROBOT_DIFFERENTIAL_KINEMATICS true)"/>
  <arg name="kinematics" default="diff" />

  <!-- - - - - - -->
  <!--   FILES   -->
  <!-- - - - - - -->
  <arg name="navigation_package" default="$(optenv NAVIGATION_PACKAGE rbvogui_navigation)"/>
  <arg name="move_base_file" default="$(eval find(navigation_package) + '/launch/move_base.launch')"/>
  <arg name="move_file" default="$(eval find(navigation_package) + '/launch/move.launch')"/>
  <arg name="scan_filter_file" default="$(eval find(navigation_package) + '/launch/scan_filter.launch')"/>
  <arg name="rgbd_to_laserscan_file" default="$(eval find(navigation_package) + '/launch/rgbd_to_laserscan.launch')"/>
  <arg name="run_laser_filters" default="$(optenv ROBOT_RUN_LASER_FILTERS true)"/>

  <arg name="config_package" default="$(optenv ROBOT_NAVIGATION_CONFIG_PACKAGE rbvogui_navigation)"/>
  <arg name="config_folder" default="config"/>
  <arg name="config_path" default="$(eval find(config_package) + '/' + config_folder)"/>

  <!-- - - - - - -->
  <!--  FRAMES   -->
  <!-- - - - - - -->
  <arg name="publish_tf" default="false" />
  <!-- Camera frames -->
  <arg name="camera_dock_frame" default="$(arg prefix)docking_station_marker"/>
  <arg name="camera_contact_dock_frame" default="$(arg prefix)docking_station_marker_contact"/>
  <arg name="camera_contact_dock_frame_for_base" default="$(arg prefix)docking_station_marker_for_base_frame"/>
  <!-- Laser frames -->
  <arg name="laser_dock_frame" default="$(arg prefix)docking_station_laser_filtered"/>
  <arg name="laser_contact_dock_frame" default="$(arg prefix)docking_station_laser_contact"/>
  <arg name="laser_contact_dock_frame_for_base" default="$(arg prefix)docking_station_laser_for_base_frame"/>
  <!-- Overwrite frames, should not be used unless reasonable exception -->
  <arg name="overwrite_frames" default="false" />
  <arg name="odom_frame" default="$(arg prefix)odom"/>
  <arg name="base_frame" default="$(arg prefix)base_footprint"/>
  <arg name="odom_frame_param_name" default="fixed_frame" />
  <arg name="base_frame_param_name" default="robot_base_frame" />

  <!-- Dockers arguments -->
  <arg name="has_docker" default="$(optenv ROBOT_HAS_DOCKER false)"/>
  <arg name="run_camera_docker" default="$(optenv ROBOT_DOCKER_RUN_CAMERA true)"/>
  <arg name="run_laser_docker" default="$(optenv ROBOT_DOCKER_RUN_LASER false)"/>



  <!-- - - - - - -->
  <!--   NODES   -->
  <!-- - - - - - -->
  <group ns="$(arg robot_id)">
    <include if="$(arg has_docker)" file="$(find rbvogui_navigation)/launch/dockers.launch">
      <arg name="config_path" value="$(arg config_path)/docking"/>
      <!--arg name="robot_id" value="$(arg robot_id)"/-->
      <arg name="docking_qr" value="$(arg run_camera_docker)"/>
      <arg name="docking_laser_reflectors" value="$(arg run_laser_docker)"/>
      <arg name="differential_robot" value="$(arg differential_robot)"/>
    </include>

    <include if="$(arg run_move_base)" file="$(arg move_base_file)">
      <arg name="robot_model" value="$(arg robot_model)"/>
      <arg name="kinematics" value="$(arg kinematics)"/>
      <arg name="has_safety_controller" value="$(arg has_safety_controller)"/>
    </include>

    <include if="$(arg run_move)" file="$(arg move_file)">
      <arg name="has_safety_controller" value="$(arg has_safety_controller)"/>
    </include>

    <include if="$(arg run_laser_filters)" file="$(arg scan_filter_file)">
      <arg name="front_laser_scan" value="front_laser"/>
      <arg name="rear_laser_scan" value="rear_laser"/>
      <arg name="has_rear_laser" value="$(arg has_rear_laser)"/>
    </include>

  </group>

</launch>
